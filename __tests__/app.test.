require('dotenv').config();

const request = require('supertest');
const app = require('../lib/app');
const connect = require('../lib/utils/connect');
const mongoose = require('mongoose');
const User = require('../lib/models/User');
const Book = require('../lib/models/Book');

describe('app routes', () => {
  beforeAll(() => {
    connect();
  });

  beforeEach(() => {
    return mongoose.connection.dropDatabase();
  });

  let user;
  let book;
  beforeEach(async() => {
    user = await User.create({
      userName: 'Ready McReaderson',
      email: 'test@testing.com'
    });

    book = await Book.create({
      user: user._id,
      addDate: new Date('2019-12-30'),
      title: 'Fledgling',
      author: 'Octavia Butler',
      genre: 'Sci-Fi/Fantasy'
    });
  });
  
  it('creates a user', () => {
    return request(app)
      .post('/api/v1/book-keeper')
      .send({
        userName: 'New Reader',
        email: 'new.reader@testing.com'
      })
      .then(res => {
        expect(res.body).toEqual({
          _id: expect.any(String),
          id: expect.any(String),
          userName: 'New Reader',
          email: 'new.reader@testing.com',
          __v: 0
        });
      });
  });

  it('finds a user by id', () => {
    return request(app)
      .get(`api/v1/book-keeper/${user.id}`)
      .then(res => {
        expect(res.body).toEqual({
          _id: user.id,
          userName: 'Ready McReaderson',
          email: 'test@testing.com',
          __v: 0
        });
      });
  });

  afterAll(() => {
    return mongoose.connection.close();
  });
});
